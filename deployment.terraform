provider "aws" {
  region = "{{region}}"  # Specify your desired AWS region here
  access_key = "{{accessKey}}"
  secret_key = "{{secretKey}}"
  {{#if profile}} profile = "{{profile}}"{{/if}}
}

resource "aws_s3_bucket" "example_bucket" {
  bucket = "{{bucketName}}"
  force_destroy = true                       # Enable the force destroy option if needed
}

resource "aws_s3_bucket_website_configuration" "example_bucket" {
  bucket = aws_s3_bucket.example_bucket.bucket

  index_document {
    suffix = "index.html"
  }

  error_document {
    key = "index.html"
  }

}

resource "aws_s3_bucket_policy" "example_bucket" {
  depends_on = [ aws_s3_bucket_website_configuration.example_bucket ]
  bucket = aws_s3_bucket.example_bucket.bucket

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": "*",
      "Action": [
        "s3:GetObject"
      ],
      "Resource": [
        "arn:aws:s3:::${aws_s3_bucket.example_bucket.id}/*"
      ]
    }
  ]
}
EOF
}

resource "aws_s3_bucket_ownership_controls" "example_bucket" {
 bucket = aws_s3_bucket.example_bucket.id
 rule {
   object_ownership = "BucketOwnerPreferred"
 }
}

resource "aws_s3_bucket_public_access_block" "example_bucket" {
  bucket = aws_s3_bucket.example_bucket.id

  block_public_acls       = false
  block_public_policy     = false
  ignore_public_acls      = false
  restrict_public_buckets = false
}

resource "aws_s3_bucket_acl" "example_bucket" {
  depends_on = [
    aws_s3_bucket_ownership_controls.example_bucket,
    aws_s3_bucket_public_access_block.example_bucket,
  ]

  bucket = aws_s3_bucket.example_bucket.id
  acl    = "public-read"
}

resource "null_resource" "example_bucket" {
  provisioner "local-exec" {
      command = "aws {{#if profile}}--profile {{profile}}{{/if}} s3 cp --recursive build s3://${aws_s3_bucket.example_bucket.id}/"
  }
}

output "bucket_url" {
 value = aws_s3_bucket_website_configuration.example_bucket.website_endpoint
}